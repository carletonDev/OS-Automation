<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>onshore.automation.testing</groupId>
  <artifactId>POM</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>POM 2.0</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.0.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <vaadin.version>14.1.23</vaadin.version>
    <suiteXmlFile>src/test/java/SharePointStagingExecutor.xml</suiteXmlFile>
    <Test>src/test/java/Debug.xml</Test>
    <Stage>src/test/java/Stage.xml</Stage>
  </properties>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- Repository used by many Vaadin add-ons -->
    <repository>
      <id>Vaadin Directory</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/uk.co.caprica/vlcj -->
    <dependency>
      <groupId>uk.co.caprica</groupId>
      <artifactId>vlcj</artifactId>
      <version>4.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.github.legioth</groupId>
      <artifactId>htmltemplate</artifactId>
      <version>1.2.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.200</version>
    </dependency>

    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>
        vaadin-spring-boot-starter
      </artifactId>
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <groupId>com.vaadin.webjar</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.insites</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymer</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>4.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.12</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.4.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.12.1</version>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path-assert</artifactId>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>4.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>3.1.5</version>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.14.3</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>3.141.59</version>
    </dependency>
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>javax.mail-api</artifactId>
      <version>1.6.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.monte</groupId>
      <artifactId>monte-screen-recorder</artifactId>
      <version>0.7.7.0</version>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>javax.activation-api</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-junit47</artifactId>
      <version>3.0.0-M1</version>
    </dependency>
    <dependency>
      <groupId>org.vaadin.crudui</groupId>
      <artifactId>crudui</artifactId>
      <version>4.3.1</version>
    </dependency>
    <dependency>
      <groupId>ru.yandex.qatools.ashot</groupId>
      <artifactId>ashot</artifactId>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>8.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>${Test}</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
              <goal>build-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <!-- <outputDirectory>${basedir}/target/newsite</outputDirectory> -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <!-- <outputDirectory>${basedir}/target/newsite</outputDirectory> -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <id>production</id>
      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>

      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>flow-server-production-mode</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <jvmArguments>-Dvaadin.productionMode</jvmArguments>
              <executable>true</executable>
              <outputDirectory>target/electron/java</outputDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
          <!-- Electron build begin -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.9.1</version>
            <configuration>
              <installDirectory>target/electron</installDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install node</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>v8.11.1</nodeVersion>
                </configuration>
              </execution>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <arguments>install</arguments>
                  <workingDirectory>target/electron</workingDirectory>
                </configuration>
              </execution>
              <execution>
                <id>install electron-packager -g</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>install electron-packager -g</arguments>
                </configuration>
              </execution>
              <execution>
                <id>package electron windows</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <arguments>run package-windows</arguments>
                  <workingDirectory>target/electron</workingDirectory>
                </configuration>
              </execution>
              <!--<execution>-->
              <!--<id>package electron mac</id>-->
              <!--<goals>-->
              <!--<goal>npm</goal>-->
              <!--</goals>-->
              <!--<phase>package</phase>-->
              <!--<configuration>-->
              <!--<arguments>run package-mac</arguments>-->
              <!--<workingDirectory>target/electron</workingDirectory>-->
              <!--</configuration>-->
              <!--</execution>-->
              <!--<execution>-->
              <!--<id>package electron linux</id>-->
              <!--<goals>-->
              <!--<goal>npm</goal>-->
              <!--</goals>-->
              <!--<phase>package</phase>-->
              <!--<configuration>-->
              <!--<arguments>run package-linux</arguments>-->
              <!--<workingDirectory>target/electron</workingDirectory>-->
              <!--</configuration>-->
              <!--</execution>-->
            </executions>
          </plugin>
          <!-- open-jdk download -->
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.5.0</version>
            <executions>
              <execution>
                <id>download-openjdk-jre-windows</id>
                <phase>package</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>
                    https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10/OpenJDK8U-jre_x64_windows_hotspot_8u222b10.zip
                  </url>
                  <outputDirectory>${project.build.directory}/openjdk-jre/windows/</outputDirectory>
                  <outputFileName>jre_windows.zip</outputFileName>
                </configuration>
              </execution>
              <!--<execution>-->
              <!--<id>download-openjdk-jre-mac-os</id>-->
              <!--<phase>package</phase>-->
              <!--<goals>-->
              <!--<goal>wget</goal>-->
              <!--</goals>-->
              <!--<configuration>-->
              <!--<url>-->
              <!--https://github.com/AdoptOpenJDK/openjdk8-binaries/archive/jdk8u252-b09.2_openj9-0.20.0.zip-->
              <!--</url>-->
              <!--<outputDirectory>${project.build.directory}/openjdk-jre/mac-os/</outputDirectory>-->
              <!--<outputFileName>jre_mac.tar.gz</outputFileName>-->
              <!--</configuration>-->
              <!--</execution>-->
              <!--<execution>-->
              <!--<id>download-openjdk-jre-linux</id>-->
              <!--<phase>package</phase>-->
              <!--<goals>-->
              <!--<goal>wget</goal>-->
              <!--</goals>-->
              <!--<configuration>-->
              <!--<url>-->
              <!--https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10/OpenJDK8U-jre_x64_linux_hotspot_8u222b10.tar.gz-->
              <!--</url>-->
              <!--<outputDirectory>${project.build.directory}/openjdk-jre/linux/</outputDirectory>-->
              <!--<outputFileName>jre_linux.tar.gz</outputFileName>-->
              <!--</configuration>-->
              <!--</execution>-->
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>truezip-maven-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>unpack-openjdk-jre-windows</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <fileset>
                    <directory>${project.build.directory}/openjdk-jre/windows/jre_windows.zip
                    </directory>
                    <outputDirectory>${project.build.directory}/openjdk-jre/windows/
                    </outputDirectory>
                  </fileset>
                </configuration>
              </execution>
              <!--<execution>-->
              <!--<id>unpack-openjdk-jre-mac-os</id>-->
              <!--<goals>-->
              <!--<goal>copy</goal>-->
              <!--</goals>-->
              <!--<phase>package</phase>-->
              <!--<configuration>-->
              <!--<fileset>-->
              <!--<directory>${project.build.directory}/openjdk-jre/mac-os/jre_mac.tar.gz-->
              <!--</directory>-->
              <!--<outputDirectory>${project.build.directory}/openjdk-jre/mac-os/-->
              <!--</outputDirectory>-->
              <!--</fileset>-->
              <!--</configuration>-->
              <!--</execution>-->
              <!--<execution>-->
              <!--<id>unpack-openjdk-jre-linux</id>-->
              <!--<goals>-->
              <!--<goal>copy</goal>-->
              <!--</goals>-->
              <!--<phase>package</phase>-->
              <!--<configuration>-->
              <!--<fileset>-->
              <!--<directory>${project.build.directory}/openjdk-jre/linux/jre_linux.tar.gz-->
              <!--</directory>-->
              <!--<outputDirectory>${project.build.directory}/openjdk-jre/linux/-->
              <!--</outputDirectory>-->
              <!--</fileset>-->
              <!--</configuration>-->
              <!--</execution>-->
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <!-- copying the source required by the electron build needs to be done early-->
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/electron</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/javascript</directory>
                    </resource>
                    <resource>
                      <directory>.</directory>
                      <includes>
                        <include>LICENSE</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-openjdk-jre-windows</id>
                <!-- adding the openjdk jre should be done later -->
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>
                    ${project.build.directory}/electron/onshore-ez-test-win32-x64/resources/app/java/jre
                  </outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/openjdk-jre/windows/jdk8u222-b10-jre
                      </directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <!--<execution>-->
              <!--<id>copy-openjdk-jre-mac-os</id>-->
              <!--<phase>package</phase>-->
              <!--<goals>-->
              <!--<goal>copy-resources</goal>-->
              <!--</goals>-->
              <!--<configuration>-->
              <!--<outputDirectory>-->
              <!--${project.build.directory}/electron/onshore-ez-test-darwin-x64/onshore-ez-test.app/Contents/Resources/app/java/jre/-->
              <!--</outputDirectory>-->
              <!--<resources>-->
              <!--<resource>-->
              <!--<directory>${project.build.directory}/openjdk-jre/mac-os/jdk8u222-b10-jre-->
              <!--</directory>-->
              <!--</resource>-->
              <!--</resources>-->
              <!--</configuration>-->
              <!--</execution>-->
              <!--<execution>-->
              <!--<id>copy-openjdk-jre-linux</id>-->
              <!--<phase>package</phase>-->
              <!--<goals>-->
              <!--<goal>copy-resources</goal>-->
              <!--</goals>-->
              <!--<configuration>-->
              <!--<outputDirectory>-->
              <!--${project.build.directory}/electron/onshore-ez-test-linux-x64/resources/app/java/jre-->
              <!--</outputDirectory>-->
              <!--<resources>-->
              <!--<resource>-->
              <!--<directory>${project.build.directory}/openjdk-jre/linux/jdk8u222-b10-jre-->
              <!--</directory>-->
              <!--</resource>-->
              <!--</resources>-->
              <!--</configuration>-->
              <!--</execution>-->
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>